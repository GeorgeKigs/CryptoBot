---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    

  mongo:
    image: mongo
    # restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    # restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  spark:
    image: docker.io/bitnami/spark:3
    environment:
      SPARK_MODE: 'master'
      # SPARK_RPC_AUTHENTICATION_ENABLED: no
      # SPARK_RPC_ENCRYPTION_ENABLED: no
      # SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
      # SPARK_SSL_ENABLED: no
    ports:
      - '8080:8080'

  spark-worker:
    image: docker.io/bitnami/spark:3
    environment:
      SPARK_MODE: 'worker'
      SPARK_MASTER_URL: 'spark://spark:7077'
      SPARK_WORKER_MEMORY: 1G
      SPARK_WORKER_CORES: 1
      # SPARK_RPC_AUTHENTICATION_ENABLED: no
      SPARK_RPC_ENCRYPTION_ENABLED: no
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
      SPARK_SSL_ENABLED: no

  buy_app:
    build:
      context: ./buy
    volumes:
      - ./app:./app
    container_name: buy
  
  aggregate_app:
    build:
      context: ./aggregate
    volumes:
      - ./src:./src
    container_name: aggregate_cont

  kindle_app:
    build:
      context: ./kindle
    container_name: kindle_cont
  
  raw-data_app:
    build:
      context: ./raw
    container_name: raw_cont

  sell_app:
    build:
      context: ./sell
    container_name: sell_cont

  stoploss_app:
    build:
      context: ./stoploss
    container_name: stoploss_cont
  
  streams:
    build: 
      context: ./streams
    container_name: streaming_data